{"version":3,"sources":["Components/Score.js","Components/Boilerplates/Header.js","Utils/Api-Calls.js","Components/Pokemons.js","Components/Boilerplates/Instruction.js","App.js","index.js"],"names":["Score","score","bestScore","className","Header","src","alt","border","fetchPokemonResults","pokemon","a","url","fetch","response","json","fetchPokemonData","Pokemons","pokemons","select","map","onClick","name","img","key","Instruction","App","useState","setPokemons","selected","setSelected","setScore","setBestScore","useEffect","then","results","forEach","prevPokemons","sprites","front_default","uniqid","prevBestScore","checkSelected","e","textContent","target","filter","item","length","prevScore","dataset","prevSelected","addSelected","currentIndex","randomIndex","Math","floor","random","shufflePokemons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43f81148.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Score({score, bestScore}) {\r\n    return(\r\n        <div className=\"scoreContainer\">\r\n            <span className='score'>Current Score: {score}</span>\r\n            <span className=\"bestScore\">Best Score: {bestScore}</span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Score from '../Score'\r\nimport '../../Styles/Header.css'\r\n\r\nexport default function Header({score, bestScore}) {\r\n    return(\r\n        <div className=\"header\">\r\n            <img className='logo' src=\"https://fontmeme.com/permalink/210819/d63932e388d58d8b6994373a23658b4a.png\" alt=\"pokemon-font\" border=\"0\"/>\r\n            <Score \r\n                score={score}\r\n                bestScore={bestScore}\r\n            />\r\n        </div>\r\n    )\r\n}","const fetchPokemonResults = async (pokemon) => {\r\n    let url = pokemon.url;\r\n    const response = await fetch(url);\r\n    return response.json();\r\n}\r\n\r\nconst fetchPokemonData = async () => {\r\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=15');\r\n    return response.json();\r\n}\r\n\r\nexport { fetchPokemonData, fetchPokemonResults }","import React from 'react'\r\nimport '../Styles/Pokemons.css'\r\n\r\nexport default function Pokemons({pokemons, select}) {\r\n    return(\r\n        <div className=\"pokemonContainer\">\r\n        {\r\n            pokemons.map(pokemon => {\r\n                return(\r\n                    <div className=\"pokemon\" key={pokemon.key} onClick={select} data-pokemon={pokemon.name}>\r\n                        <img src={pokemon.img} alt={pokemon.name}/>\r\n                        <span className=\"name\">{pokemon.name}</span>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nimport '../../Styles/Instruction.css'\r\n\r\nexport default function Instruction() {\r\n    return (\r\n        <div className=\"instructionContainer\">\r\n            <span className=\"instruction\">Get points by clicking on an image but don't click on any more than once!</span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\nimport Header from './Components/Boilerplates/Header';\nimport { fetchPokemonData, fetchPokemonResults } from './Utils/Api-Calls'\nimport Pokemons from './Components/Pokemons';\nimport uniqid from 'uniqid';\nimport Instruction from './Components/Boilerplates/Instruction';\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  useEffect(() => {\n    fetchPokemonData()\n    .then(pokemons => pokemons.results.forEach(pokemon => {\n      fetchPokemonResults(pokemon)\n      .then(pokemon => setPokemons(prevPokemons => {\n        let name = pokemon.name;\n        let img = pokemon.sprites.front_default;\n        return([...prevPokemons,\n          {\n            key: uniqid(),\n            name,\n            img,\n        }]);\n      }));\n    }));\n  },[]);\n\n  useEffect(() => {\n    if (score > bestScore) setBestScore(prevBestScore => prevBestScore + 1)\n  },[score, bestScore])\n\n  const addScore = () => {\n    setScore(prevScore => prevScore + 1);\n  }\n\n  const resetScore = () => {\n    setScore(prevScore => prevScore = 0);\n  }\n\n  const addSelected = (e) => {\n    const { pokemon } = e.target.dataset;\n    setSelected(prevSelected => {\n      return([\n        ...prevSelected,\n        pokemon,\n      ]);\n    });\n  }\n\n  const resetSelected = () => {\n    setSelected([]);\n  }\n\n  const checkSelected = (e) => {\n    const { textContent } = e.target;\n    const result = selected.filter(item => item === textContent);\n    if (result.length === 1) {\n      resetScore();\n      resetSelected();\n    }\n  }\n\n  const shufflePokemons = (pokemons) => {\n    let currentIndex = pokemons.length;\n    \n    while(currentIndex !== 0) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [pokemons[currentIndex], pokemons[randomIndex]] = [\n        pokemons[randomIndex], pokemons[currentIndex]\n      ];\n    }\n    return pokemons;\n  }\n\n  const onClick = (e) => {\n    addSelected(e);\n    addScore();\n    checkSelected(e);\n    shufflePokemons(pokemons);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header \n        score={score}\n        bestScore={bestScore}\n        />\n      <Pokemons \n        pokemons={pokemons}\n        select={onClick}\n      />\n      <Instruction />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}